services:
  api:
    image: "api:latest"
    container_name: api
    build:
      context: ./api
      dockerfile: Dockerfile.prod
    tty: true
    ports:
      - "8081:8081"
    volumes:
      - './api/src:/app'
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      vpcbr:
        ipv4_address: 10.5.0.7
    depends_on:
      - mysql

  next:
    image: "next:latest"
    container_name: next
    build:
      context: ./next
      dockerfile: Dockerfile.prod
    tty: true
    ports:
      - "8082:8082"
    volumes:
      - '/next/.next ./.next'
    networks:
      vpcbr:
        ipv4_address: 10.5.0.5
    depends_on:
      - mysql

  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3307:3306"
    networks:
      vpcbr:
        ipv4_address: 10.5.0.2
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  #phpmyadmin:
  #  image: phpmyadmin/phpmyadmin
  #  container_name: phpmyadmin
  #  environment:
  #    PMA_HOST: mysql
  #    MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  #  ports:
  #    - "8085:80"
  #  networks:
  #    vpcbr:
  #      ipv4_address: 10.5.0.3
  #  depends_on:
  #    - mysql
  
  nginx:
    image: "nginx:latest"
    shm_size: '1000000000'
    container_name: nginx
    build:
      context: ./nginx
    tty: true
    links:
      - api
      - next
    ports:
      - '8080:80'
    networks:
      vpcbr:
        ipv4_address: 10.5.0.4
    depends_on:
      - mysql
      
volumes:
  mysql_data:
networks:
  vpcbr:
    driver: bridge
    ipam:
      config:
      - subnet: 10.5.0.0/16
        gateway: 10.5.0.1